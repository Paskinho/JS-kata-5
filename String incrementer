
TASK:
Your job is to write a function which increments a string, to create a new string.

If the string already ends with a number, the number should be incremented by 1.
If the string does not end with a number. the number 1 should be appended to the new string.
Examples:

foo -> foo1

foobar23 -> foobar24

foo0042 -> foo0043

foo9 -> foo10

foo099 -> foo100

Attention: If the number has leading zeros the amount of digits should be considered.

function incrementString (strng) {
  // return incrementedString
}

1. String to Array
2. Last element of array
3. If last element - letter return array to string and +1
4. If last elemeте - number return array last element + 1 => array to string => return this string

My solution

function incrementString (strng) {
  const arr = strng.split('')
  const last = arr[arr.length - 1]
  if (last === [0-9] )  {
    const lastEl = last + 1
   const newArr =  arr.splice(arr.length - 1, 1, lastEl)
    return newArr.join('')
  }
  else  {
    arr.push("1")
    return arr.join('')
  }
}

Correct solution:

variant 1
function incrementString (strng) {
const body = strng.slice(0, -1);
  const lastDigit = strng.slice(-1).match(/[0-9]/);
  return lastDigit === null
    ? strng + "1"
    : lastDigit != 9
    ? body + (+lastDigit + 1)
    : incrementString(body) + "0";
}




